create database ecommerce;
use ecommerce;

create table customers(
id INT AUTO_INCREMENT primary key,
name varchar(100) not null,
email varchar(100) unique not null,
address varchar(255) not null
);

create table orders(
id INT AUTO_INCREMENT primary key,
customer_id int,
order_date date,
total_amount decimal(10,2),
foreign key(customer_id) references customers(id)
);

create table products(
id INT AUTO_INCREMENT primary key,
name varchar(100),
price decimal(10,2),
description text
);

describe products;

insert into customers(name, email, address) values 
("damonsalv", "damon@gmail.com", "98/99 dubai main"),
("richard", "richard@gmail.com", "143 washington"),
("klausmike", "klaus@gmail.com", "582 new zealand")

insert into products(name, price, description) values
('product A', 35.00 , 'razor'),
('product B', 50.00 , 'bodywash'),
('product C', 75.00, 'hair growth serum'),
('product D', 90.00, 'perfume');

insert into orders (customer_id, order_date, total_amount) values
(1, curdate(), 86),
(2, curdate()- interval 10 day, 30.00),
(3, curdate()- interval 40 day, 70.00),
(1, curdate()- interval 5 day, 100.00);

select * from customers;
select * from products;
select * from orders;

/*retrive all the customers who placed order in the last 30 days*/

select distinct * 
from customers c
join orders o on c.id = o.customer_id
where o.order_date >= curdate() - interval 30 day;


/*total amount of all the products placed by each customer*/
select c.name, sum(o.total_amount) as total_spent
from customers c 
join orders o on c.id = o.customer_id
group by c.id;

/*update the price of product c to 45.00*/

update products
set price = 45.00
where ID= 3;


select * from products where name= 'product c';

/*add a new column discount to the products table*/

alter table products 
add column discount decimal(5,2) default 0.00;

select * from products;

/*retrive top 3 products with highest price*/

select * from products 
order by price desc 
limit 3;

/*join the order and customers table to retrive the customer name and order date*/

select c.name, o.order_date
from orders o
join customers c on o.customer_id=c.id;

/*retrive the orders with total amount more than 150.00*/

select * from orders
where total_amount > 150.00;

/*normalise, create order_items table*/

create table order_items(
id int auto_increment primary key,
order_id int,
product_id int,
quantity int,
foreign key (order_id) references orders(id),
foreign key (product_id) references products(id)
);

select * from order_items

insert into order_items (order_id, product_id, quantity) values
(1, 1, 1), /*damon ordered product a*/
(1, 2, 1), /*damon ordered product b*/
(2, 3, 2), /*richard ordered 2nos product c*/
(3, 4, 1), /*klaus ordered product d*/
(1, 3, 2); /*damon ordered 2nos product c*/

select * from order_items

/*get the name of customers who ordered product a*/

select distinct c.name
from customers c
join orders o on c.id= o.customer_id
join order_items oi on o.id= oi.order_id
join products p on oi.product_id = p.id
where p.name = 'product a';


/*retrive avg total of all the orders*/

select avg(total_amount) as average_order_total
from orders;